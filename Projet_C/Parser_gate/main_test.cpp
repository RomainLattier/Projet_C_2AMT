#include <iostream>
#include <fstream>
#include <string>
#include <map>
#include <list>
#include <vector>
#include <cstdlib>


#include "Parser_gate.h"
#include "../Porte/Combinatoire/And.h"

using namespace std;

int main(int argc, char const *argv[]) {

//////////////////////////////////////////////////////////////////////////////
//LIST DES GATE DISPONIBLE
//////////////////////////////////////////////////////////////////////////////

  // vector<string> v_gate_avaible;
  // v_gate_avaible.push_back("AND");
  // v_gate_avaible.push_back("OR");
  // v_gate_avaible.push_back("XOR");
  // v_gate_avaible.push_back("NAND");
  // v_gate_avaible.push_back("NOR");
  // v_gate_avaible.push_back("NXOR");

  /////////////////////////////////////////////////////////////////////////////
  //Déclaration des structure de données général
  /////////////////////////////////////////////////////////////////////////////

  vector<Gate*> v_gate;
  map<string, list<Gate*> > m_input;
  map<string, vector<int> > m_output;

//Appel du parser de lecture du fichier .dot
//Et detection d'erreur de sortie

/////////////////////////////////////////////////////////////////////////////
//Appel du parser du .dot
/////////////////////////////////////////////////////////////////////////////

if(parser_gate(&m_input,&m_output,&l_namegate,&v_gate_avaible)!=0){
  cout<<"Erreur de lecture du fichier .dot"<< endl;
  exit(EXIT_FAILURE);
}


/////////////////////////////////////////////////////////////////////////////
//Controle list des noms de gate,
/////////////////////////////////////////////////////////////////////////////

// for(int i_v = 0; i_v<v_gate_avaible.size();i_v++){
//   cout << v_gate_avaible.at(i_v)<< endl;
// }

/////////////////////////////////////////////////////////////////////////////
//
/////////////////////////////////////////////////////////////////////////////

//cout << "FIN PRG"<<endl;
}
